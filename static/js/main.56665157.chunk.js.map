{"version":3,"sources":["components/NavbarLink/NavbarLink.tsx","components/Navbar/Navbar.tsx","pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["NavbarLink","path","text","to","className","isActive","classNames","Navbar","role","HomePage","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","fetch","response","ok","Error","json","Loader","PersonLink","person","name","sex","slug","PersonInfo","born","died","motherName","fatherName","mother","father","isSelected","useParams","PeopleTable","people","length","map","PeoplePage","useState","setPeople","isLoaded","setIsLoaded","errorMessage","setErrorMessage","loadPeopleFromServer","useCallback","peopleFromServer","processedPeople","personCopy","find","useEffect","NotFoundPage","App","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.56665157.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  path: string,\n  text: string,\n};\n\nexport const NavbarLink: React.FC<Props> = ({ path, text }) => (\n  <NavLink\n    to={path}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\n\nimport { NavbarLink } from '../NavbarLink';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavbarLink path=\"/\" text=\"Home\" />\n        <NavbarLink path=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">\n    Home Page\n  </h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  await wait(500);\n\n  const response = await fetch(API_URL);\n\n  if (!response.ok) {\n    throw new Error('The request failed');\n  }\n\n  return response.json();\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={classNames(\n        { 'has-text-danger': sex === 'f' },\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonInfo: React.FC<Props> = ({ person }) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n    slug,\n  } = person;\n  const { slug: selectedPersonSlug } = useParams<string>();\n\n  const isSelected = slug === selectedPersonSlug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': isSelected },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n\n      <td>{born}</td>\n\n      <td>{died}</td>\n\n      <td>\n        {mother\n          ? (\n            <PersonLink person={mother} />\n          )\n          : (\n            motherName || '-'\n          )}\n      </td>\n\n      <td>\n        {father\n          ? (\n            <PersonLink person={father} />\n          )\n          : (\n            fatherName || '-'\n          )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.length\n        ? (\n          people.map(person => (\n            <PersonInfo key={person.slug} person={person} />\n          ))\n        )\n        : (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n    </tbody>\n  </table>\n);\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const loadPeopleFromServer = useCallback(async () => {\n    try {\n      const peopleFromServer = await getPeople();\n      const processedPeople = peopleFromServer.map(person => {\n        const { motherName, fatherName } = person;\n        const personCopy = { ...person };\n\n        const mother = peopleFromServer.find(({ name }) => motherName === name);\n        const father = peopleFromServer.find(({ name }) => fatherName === name);\n\n        if (mother) {\n          personCopy.mother = mother;\n        }\n\n        if (father) {\n          personCopy.father = father;\n        }\n\n        return personCopy;\n      });\n\n      setPeople(processedPeople);\n    } catch {\n      setErrorMessage('Something went wrong');\n    } finally {\n      setIsLoaded(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">\n        People Page\n      </h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {!isLoaded && (\n            <Loader />\n          )}\n\n          {isLoaded && errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {isLoaded && !errorMessage && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">\n    Page not found\n  </h1>\n);\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nimport './App.scss';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}